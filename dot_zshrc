#!/bin/zsh

autoload -Uz compinit
compinit

OS="$(uname)" 

# Detect if WSL2
if [[ "$OS" == "Linux" ]]; then
  OS_RELEASE=$(cat /proc/sys/kernel/osrelease 2>/dev/null)
  OS=$([[ "$OS_RELEASE" == *"WSL2"* ]] && echo "WSL2" || echo "Linux")
fi

case "$OS" in
  "Darwin")
    export NOTES="$HOME/Library/CloudStorage/OneDrive-Personal/ObsidianVault"
    ;;

  "WSL2")
    export NOTES="/mnt/c/Users/druwa/OneDrive/ObsidianVault"
    ;;
esac

if [[ -n "$NOTES" ]]; then
  alias notes="cd \"$NOTES\""
fi

# For MacOS
if type brew &>/dev/null; then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
  alias update='brew update && brew upgrade && brew upgrade --cask --greedy && ani-cli -U'
fi

if command -v lsd > /dev/null; then
  alias ls="lsd"
  alias la="ls -alh --group-dirs first --sort version"
  alias ll="ls -l --group-dirs first --sort version"
fi

if command -v tree > /dev/null; then
  alias tree="tree -v"
fi

alias v="nvim"
alias vi="nvim"
alias vim="nvim"
export EDITOR="nvim"
export VISUAL="nvim"


export DOTFILES="$HOME/.local/share/chezmoi"
export GITHUB_USERNAME="druwan"
export LANG=en_US.UTF-8
export PATH="$SCRIPTS:$PATH"
export SCRIPTS="$DOTFILES/scripts"
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"

# History
alias history='history 1'
HISTFILE="$HOME/.zsh_history"
HIST_STAMPS="dd/mm/yyyy"
HISTSIZE=100000
SAVEHIST=100000
setopt HIST_IGNORE_SPACE
setopt HIST_IGNORE_DUPS
setopt SHARE_HISTORY


# zsh plugins
if [ ! -d "$HOME/.config/zsh/zsh-syntax-highlighting/" ]; then
  echo "Not installed, cloning..."
  git clone https://github.com/zsh-users/zsh-syntax-highlighting "$HOME/.config/zsh/zsh-syntax-highlighting/"
fi
source "$HOME/.config/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

# Node
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Python
export PATH="/usr/local/opt/python/libexec/bin:$PATH"

if [[ ":$PATH:" != *":$HOME/.local/bin:"* ]]; then
  export PATH="$HOME/.local/bin:$PATH"
fi

if command -v fzf > /dev/null; then
  source <(fzf --zsh)
fi

if command -v uv >/dev/null 2>&1; then
  eval "$(uv generate-shell-completion zsh)"
fi

if command -v chezmoi > /dev/null; then
  source <(chezmoi completion zsh)
fi

if command -v kubectl > /dev/null; then
  source <(kubectl completion zsh)
fi

alias k="kubectl"
compdef k=kubectl

if command -v minikube > /dev/null; then
  source <(minikube completion zsh)
fi

if command -v docker > /dev/null; then
  source <(docker completion zsh)
fi

if command -v devpod > /dev/null; then
  source <(devpod completion zsh)
fi

if command -v mise > /dev/null; then
  MISERUN="$(command -v mise)"
  eval "$($MISERUN activate zsh)"
fi

if command -v helm > /dev/null; then
  source <(helm completion zsh)
fi

if command -v gh > /dev/null; then
  source <(gh completion -s zsh)
fi

if command -v flux > /dev/null; then
  source <(flux completion zsh)
fi

if [ -f "$HOME/.privaterc.sh" ]; then
    source "$HOME/.privaterc.sh"
fi

# Prompt
eval "$(starship init zsh)"

